// "use client";
// import axios from "axios";
// import InputField from "@/components/Form/InputField";
// import { AuthBtn } from "@/components/AuthBtn/AuthBtn";
// import Link from "next/link";
// import { useRouter } from "next/navigation";
// import { useState } from "react";
// import { object, string } from "yup";
// import {
//   Alert,
//   AlertDescription,
//   AlertIcon,
//   AlertTitle,
// } from "@chakra-ui/react";

// const emailImage = "/images/email.png";
// const passImage = "/images/lock.png";
// const signinValidation = object().shape({
//   email: string().email("Invalid email formatrequired("Email is required"),
//   device_token: string().required("Device token is required"),
//   device_info: string().required("Device info is required"),
//   password: string()
//     .min(8, "Password must be at least 8 characters")
//     .matches(
//       /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@#.$!%*?&])/,
//       "Password must contain uppercase, lowercase, digit and special character"
//     )
//     .required("Password is required"),
// });
// export default function LoginPage() {
//   const [show, setShow] = useState(false);
//   const [email, setEmail] = useState("");
//   const [password, setPassword] = useState("");
//   const [error, setError] = useState(null);
//   const [success, setSuccess] = useState(false);
//   const [deviceToken, setDeviceToken] = useState("Token");
//   const [deviceInfo, setDeviceInfo] = useState("Some Info");
//   const router = useRouter();

//   const handleClick = () => setShow(!show);

//   const handleLogin = async (e) => {
//     e.preventDefault();

//     const requestData = {
//       email: email, // Use a known valid email
//       password: password, // Use a valid password
//       device_token: deviceToken, // Replace with a valid token
//       device_info: deviceInfo, // Replace with actual device info
//     };

//     try {
//       await signinValidation.validate(requestData);
//       const response = await axios.post(
//         `${process.env.NEXT_PUBLIC_SERVER_URL}vendor/auth/signin`,
//         requestData,
//         {
//           headers: {
//             "Content-Type": "application/json",
//             Authorization: `Bearer ${sessionStorage.getItem("token")}`,
//           },
//         }
//       );

//       if (response?.data?.code === 200) {
//         setSuccess(true);
//         setError(null);
//         setTimeout(() => {
//           sessionStorage.setItem("token", response?.data?.data?.token);
//           sessionStorage.setItem("bar_id", response?.data?.data?.bar_id);
//           sessionStorage.setItem("vendor_id", response?.data?.data?.vendor_id);
//           sessionStorage.setItem(
//             "cooking_range",
//             JSON.stringify(response?.data?.data?.cooking_range)
//           );
//           sessionStorage.setItem(
//             "categories",
//             JSON.stringify(response?.data?.data?.categories)
//           );
//           router.push(response?.data?.data?.step_after_login);
//         }, 2000);
//       } else {
//         setError(response?.data?.message || "Login failed");
//         setSuccess(false);
//       }
//     } catch (error) {
//       setError(error?.message || error?.response?.data?.message);
//       setSuccess(false);
//     }
//   };

//   return (
//     <>
//       {success ? (
//         <Alert
//           status="success"
//           variant="subtle"
//           flexDirection="column"
//           alignItems="center"
//           justifyContent="center"
//           textAlign="center"
//           height="200px"
//         >
//           <AlertIcon boxSize="40px" mr={0} />
//           <AlertTitle mt={4} mb={1} fontSize="lg">
//             Application submitted!
//           </AlertTitle>
//           <AlertDescription maxWidth="sm">
//             Thanks for submitting your application. Our team will get back to
//             you soon.
//           </AlertDescription>
//         </Alert>
//       ) : (
//         <form onSubmit={handleLogin}>
//           <label htmlFor="email">Email:</label>
//           <InputField
//             type="text"
//             id="email"
//             imageSrc={emailImage}
//             value={email}
//             onChange={(e) => setEmail(e.target.value)}
//           />
//           <label htmlFor="password">Password:</label>
//           <InputField
//             type={show ? "text" : "password"}
//             id="password"
//             imageSrc={passImage}
//             show={show}
//             handleClick={handleClick}
//             value={password}
//             onChange={(e) => setPassword(e.target.value)}
//           />
//           <div className="remember d-flex justify-content-between align-items-center pb-4">
//             <div className="d-flex align-items-center gap-2">
//               <input type="checkbox" id="remember" />
//               <label htmlFor="remember"> Remember me</label>
//             </div>
//             <Link href="/auth/forget">Forget Password?</Link>
//           </div>
//           {error && <p style={{ color: "red" }}>{error}</p>}
//           <AuthBtn title="Login" type="submit" />
//         </form>
//       )}
//     </>
//   );
// }

// export default function LoginPage() {
//   const [show, setShow] = useState(false);
//   const [email, setEmail] = useState("");
//   const [password, setPassword] = useState("");
//   const [error, setError] = useState(null);
//   const [success, setSuccess] = useState(false);
//   const [deviceToken, setDeviceToken] = useState("Token");
//   const [deviceInfo, setDeviceInfo] = useState("Some Info");
//   const [isLoading, setIsLoading] = useState(false); // New loading state
//   const router = useRouter();

//   const handleClick = () => setShow(!show);

//   const handleLogin = async (e) => {
//     e.preventDefault();
//     setIsLoading(true); // Disable button on submit

//     const requestData = {
//       email: email,
//       password: password,
//       device_token: deviceToken,
//       device_info: deviceInfo,
//     };

//     try {
//       await signinValidation.validate(requestData);
//       const response = await axios.post(
//         `${process.env.NEXT_PUBLIC_SERVER_URL}vendor/auth/signin`,
//         requestData,
//         {
//           headers: {
//             "Content-Type": "application/json",
//             Authorization: `Bearer ${sessionStorage.getItem("token")}`,
//           },
//         }
//       );

//       if (response?.data?.code === 200) {
//         setSuccess(true);
//         setError(null);
//         setTimeout(() => {
//           sessionStorage.setItem("token", response?.data?.data?.token);
//           sessionStorage.setItem("bar_id", response?.data?.data?.bar_id);
//           sessionStorage.setItem("vendor_id", response?.data?.data?.vendor_id);
//           sessionStorage.setItem(
//             "cooking_range",
//             JSON.stringify(response?.data?.data?.cooking_range)
//           );
//           sessionStorage.setItem(
//             "categories",
//             JSON.stringify(response?.data?.data?.categories)
//           );
//           router.push(response?.data?.data?.step_after_login);
//         }, 1000);
//       } else {
//         setError(response?.data?.message || "Login failed");
//         setSuccess(false);
//         setIsLoading(false); // Re-enable button on failure
//       }
//     } catch (error) {
//       setError(error?.message || error?.response?.data?.message);
//       setSuccess(false);
//       setIsLoading(false); // Re-enable button on error
//     }
//   };

//   return (
//     <>
//       {success ? (
//         <Alert
//           status="success"
//           variant="subtle"
//           flexDirection="column"
//           alignItems="center"
//           justifyContent="center"
//           textAlign="center"
//           height="200px"
//         >
//           <AlertIcon boxSize="40px" mr={0} />
//           <AlertTitle mt={4} mb={1} fontSize="lg">
//             Application submitted!
//           </AlertTitle>
//           <AlertDescription maxWidth="sm">
//             Thanks for submitting your application. Our team will get back to
//             you soon.
//           </AlertDescription>
//         </Alert>
//       ) : (
//         <form onSubmit={handleLogin}>
//           <label htmlFor="email">Email:</label>
//           <InputField
//             type="text"
//             id="email"
//             imageSrc={emailImage}
//             value={email}
//             onChange={(e) => setEmail(e.target.value)}
//           />
//           <label htmlFor="password">Password:</label>
//           <InputField
//             type={show ? "text" : "password"}
//             id="password"
//             imageSrc={passImage}
//             show={show}
//             handleClick={handleClick}
//             value={password}
//             onChange={(e) => setPassword(e.target.value)}
//           />
//           <div className="remember d-flex justify-content-between align-items-center pb-4">
//             <div className="d-flex align-items-center gap-2">
//               <input type="checkbox" id="remember" />
//               <label htmlFor="remember"> Remember me</label>
//             </div>
//             <Link href="/auth/forget">Forget Password?</Link>
//           </div>
//           {error && <p style={{ color: "red" }}>{error}</p>}
//           <AuthBtn title="Login" type="submit" disabled={isLoading} />
//         </form>
//       )}
//     </>
//   );
// }
